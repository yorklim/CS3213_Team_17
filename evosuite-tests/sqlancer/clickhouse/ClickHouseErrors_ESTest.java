/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 13 13:17:51 GMT 2025
 */

package sqlancer.clickhouse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.clickhouse.ClickHouseErrors;
import sqlancer.common.query.ExpectedErrors;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClickHouseErrors_ESTest extends ClickHouseErrors_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExpectedErrors expectedErrors0 = new ExpectedErrors();
      ClickHouseErrors.addExpectedExpressionErrors(expectedErrors0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      List<String> list0 = ClickHouseErrors.getExpectedExpressionErrors();
      assertEquals(70, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClickHouseErrors.addExpectedExpressionErrors((ExpectedErrors) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.clickhouse.ClickHouseErrors", e);
      }
  }
}
