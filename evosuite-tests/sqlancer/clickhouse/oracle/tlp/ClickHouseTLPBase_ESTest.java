/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 13 13:21:50 GMT 2025
 */

package sqlancer.clickhouse.oracle.tlp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.clickhouse.ClickHouseProvider;
import sqlancer.clickhouse.ast.ClickHouseAliasOperation;
import sqlancer.clickhouse.ast.ClickHouseColumnReference;
import sqlancer.clickhouse.ast.ClickHouseExpression;
import sqlancer.clickhouse.ast.ClickHouseSelect;
import sqlancer.clickhouse.gen.ClickHouseExpressionGenerator;
import sqlancer.clickhouse.oracle.tlp.ClickHouseTLPBase;
import sqlancer.common.gen.ExpressionGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClickHouseTLPBase_ESTest extends ClickHouseTLPBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClickHouseProvider.ClickHouseGlobalState clickHouseProvider_ClickHouseGlobalState0 = new ClickHouseProvider.ClickHouseGlobalState();
      ClickHouseTLPBase clickHouseTLPBase0 = new ClickHouseTLPBase(clickHouseProvider_ClickHouseGlobalState0);
      ClickHouseExpressionGenerator clickHouseExpressionGenerator0 = new ClickHouseExpressionGenerator(clickHouseProvider_ClickHouseGlobalState0);
      clickHouseTLPBase0.gen = clickHouseExpressionGenerator0;
      clickHouseTLPBase0.getGen();
      // Undeclared exception!
      try { 
        clickHouseTLPBase0.check();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClickHouseProvider.ClickHouseGlobalState clickHouseProvider_ClickHouseGlobalState0 = new ClickHouseProvider.ClickHouseGlobalState();
      ClickHouseTLPBase clickHouseTLPBase0 = new ClickHouseTLPBase(clickHouseProvider_ClickHouseGlobalState0);
      LinkedList<ClickHouseColumnReference> linkedList0 = new LinkedList<ClickHouseColumnReference>();
      List<ClickHouseExpression> list0 = clickHouseTLPBase0.generateFetchColumns(linkedList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClickHouseProvider.ClickHouseGlobalState clickHouseProvider_ClickHouseGlobalState0 = new ClickHouseProvider.ClickHouseGlobalState();
      ClickHouseSelect clickHouseSelect0 = new ClickHouseSelect();
      ClickHouseAliasOperation clickHouseAliasOperation0 = new ClickHouseAliasOperation(clickHouseSelect0, "s,w0:q+h#X");
      ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(clickHouseAliasOperation0);
      List<ClickHouseColumnReference> list0 = List.of(clickHouseColumnReference0, clickHouseColumnReference0, clickHouseColumnReference0, clickHouseColumnReference0, clickHouseColumnReference0, clickHouseColumnReference0);
      ClickHouseTLPBase clickHouseTLPBase0 = new ClickHouseTLPBase(clickHouseProvider_ClickHouseGlobalState0);
      List<ClickHouseExpression> list1 = clickHouseTLPBase0.generateFetchColumns(list0);
      assertFalse(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClickHouseTLPBase clickHouseTLPBase0 = new ClickHouseTLPBase((ClickHouseProvider.ClickHouseGlobalState) null);
      // Undeclared exception!
      try { 
        clickHouseTLPBase0.check();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.clickhouse.oracle.tlp.ClickHouseTLPBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClickHouseProvider.ClickHouseGlobalState clickHouseProvider_ClickHouseGlobalState0 = new ClickHouseProvider.ClickHouseGlobalState();
      ClickHouseTLPBase clickHouseTLPBase0 = new ClickHouseTLPBase(clickHouseProvider_ClickHouseGlobalState0);
      // Undeclared exception!
      try { 
        clickHouseTLPBase0.check();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClickHouseProvider.ClickHouseGlobalState clickHouseProvider_ClickHouseGlobalState0 = new ClickHouseProvider.ClickHouseGlobalState();
      ClickHouseTLPBase clickHouseTLPBase0 = new ClickHouseTLPBase(clickHouseProvider_ClickHouseGlobalState0);
      ExpressionGenerator<ClickHouseExpression> expressionGenerator0 = clickHouseTLPBase0.getGen();
      assertNull(expressionGenerator0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClickHouseProvider.ClickHouseGlobalState clickHouseProvider_ClickHouseGlobalState0 = new ClickHouseProvider.ClickHouseGlobalState();
      ClickHouseTLPBase clickHouseTLPBase0 = new ClickHouseTLPBase(clickHouseProvider_ClickHouseGlobalState0);
      // Undeclared exception!
      try { 
        clickHouseTLPBase0.generateFetchColumns((List<ClickHouseColumnReference>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.clickhouse.oracle.tlp.ClickHouseTLPBase", e);
      }
  }
}
