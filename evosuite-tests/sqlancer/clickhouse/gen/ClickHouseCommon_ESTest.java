/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 13 13:24:19 GMT 2025
 */

package sqlancer.clickhouse.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.clickhouse.ClickHouseSchema;
import sqlancer.clickhouse.gen.ClickHouseCommon;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClickHouseCommon_ESTest extends ClickHouseCommon_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<ClickHouseSchema.ClickHouseTable> linkedList0 = new LinkedList<ClickHouseSchema.ClickHouseTable>();
      ClickHouseSchema clickHouseSchema0 = new ClickHouseSchema(linkedList0);
      ClickHouseCommon.getTableRefs(linkedList0, clickHouseSchema0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClickHouseCommon.getTableRefs((List<ClickHouseSchema.ClickHouseTable>) null, (ClickHouseSchema) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.clickhouse.gen.ClickHouseCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<ClickHouseSchema.ClickHouseTable> linkedList0 = new LinkedList<ClickHouseSchema.ClickHouseTable>();
      linkedList0.add((ClickHouseSchema.ClickHouseTable) null);
      ClickHouseSchema clickHouseSchema0 = new ClickHouseSchema(linkedList0);
      ClickHouseCommon.getTableRefs(linkedList0, clickHouseSchema0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = ClickHouseCommon.createConstraintName(1001);
      assertEquals("x1001", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = ClickHouseCommon.createTableName(0);
      assertEquals("t0", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = ClickHouseCommon.createColumnName(0);
      assertEquals("c0", string0);
  }
}
