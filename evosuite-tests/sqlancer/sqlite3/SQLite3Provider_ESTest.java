/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 12:05:18 GMT 2025
 */

package sqlancer.sqlite3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sqlancer.sqlite3.SQLite3GlobalState;
import sqlancer.sqlite3.SQLite3Provider;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLite3Provider_ESTest extends SQLite3Provider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
      try { 
        sQLite3Provider0.generateAndTestDatabase(sQLite3GlobalState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.ProviderAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      try { 
        sQLite3Provider0.getQueryPlan("FAIL", (SQLite3GlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.sqlite3.SQLite3Provider", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      try { 
        sQLite3Provider0.generateDatabase((SQLite3GlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.sqlite3.SQLite3Provider", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
      // Undeclared exception!
      try { 
        sQLite3Provider0.executeMutator(5, sQLite3GlobalState0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      try { 
        sQLite3Provider0.addRowsToAllTables((SQLite3GlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.sqlite3.SQLite3Provider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
      // Undeclared exception!
      try { 
        sQLite3Provider0.addRowsToAllTables(sQLite3GlobalState0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SQLite3Provider.Action sQLite3Provider_Action0 = SQLite3Provider.Action.CHECK_RTREE_TABLE;
      SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
      // Undeclared exception!
      try { 
        sQLite3Provider_Action0.getQuery(sQLite3GlobalState0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".\\databases\\null.db");
      FileSystemHandling.createFolder(evoSuiteFile0);
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
      // Undeclared exception!
      try { 
        sQLite3Provider0.createDatabase(sQLite3GlobalState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.sqlite3.SQLite3Provider", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
      try { 
        sQLite3Provider0.createDatabase(sQLite3GlobalState0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No suitable driver found for jdbc:sqlite:E:\\Y2S2\\CS3213\\Sqlancer_original\\.\\databases\\null.db
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
      try { 
        sQLite3Provider0.executeMutator(0, sQLite3GlobalState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.GlobalState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      String string0 = sQLite3Provider0.getDBMSName();
      assertEquals("sqlite3", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      try { 
        sQLite3Provider0.executeMutator(1440, (SQLite3GlobalState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1440 out of bounds for length 24
         //
         verifyException("sqlancer.sqlite3.SQLite3Provider", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLite3Provider sQLite3Provider0 = new SQLite3Provider();
      double[] doubleArray0 = sQLite3Provider0.initializeWeightedAverageReward();
      assertEquals(24, doubleArray0.length);
  }
}
