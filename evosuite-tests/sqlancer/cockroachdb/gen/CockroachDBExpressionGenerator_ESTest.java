/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 04:59:34 GMT 2025
 */

package sqlancer.cockroachdb.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBBugs;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.ast.CockroachDBAggregate;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBJoin;
import sqlancer.cockroachdb.ast.CockroachDBNotOperation;
import sqlancer.cockroachdb.ast.CockroachDBSelect;
import sqlancer.cockroachdb.ast.CockroachDBUnaryPostfixOperation;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;
import sqlancer.common.schema.AbstractTables;
import sqlancer.common.schema.TableIndex;
import sqlancer.common.visitor.UnaryOperation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBExpressionGenerator_ESTest extends CockroachDBExpressionGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      LinkedList<CockroachDBSchema.CockroachDBTable> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBTable>();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(linkedList0);
      cockroachDBExpressionGenerator0.setTablesAndColumns(abstractTables0);
      List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.getTableRefs();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
      LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
      CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable("sqlancer.materialize.MaterializeOptions", linkedList0, linkedList1, true);
      List<CockroachDBSchema.CockroachDBTable> list0 = List.of(cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0);
      AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(list0);
      cockroachDBExpressionGenerator0.setTablesAndColumns(abstractTables0);
      List<CockroachDBExpression> list1 = cockroachDBExpressionGenerator0.getTableRefs();
      assertEquals(7, list1.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType1 = cockroachDBExpressionGenerator0.getRandomType();
      assertFalse(cockroachDBSchema_CockroachDBCompositeDataType1.equals((Object)cockroachDBSchema_CockroachDBCompositeDataType0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      LinkedList<CockroachDBExpression> linkedList0 = new LinkedList<CockroachDBExpression>();
      CockroachDBConstant.CockroachDBArrayConstant cockroachDBConstant_CockroachDBArrayConstant0 = new CockroachDBConstant.CockroachDBArrayConstant(linkedList0);
      cockroachDBSelect0.setFromTables(linkedList0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      String string0 = cockroachDBExpressionGenerator0.generateUnoptimizedQueryString(cockroachDBSelect0, (CockroachDBExpression) cockroachDBConstant_CockroachDBArrayConstant0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("", cockroachDBSchema_CockroachDBCompositeDataType0, false, false);
      List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      cockroachDBExpressionGenerator0.setColumns(list0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0.generateColumn(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertNotNull(cockroachDBExpression0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.VARBIT;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("EXPLAIN ", cockroachDBSchema_CockroachDBCompositeDataType0, false, false);
      List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0.setColumns(list0);
      boolean boolean0 = cockroachDBExpressionGenerator1.canGenerateColumnOfType(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.FLOAT;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0, 9);
      boolean boolean0 = cockroachDBExpressionGenerator0.canGenerateColumnOfType(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.setTablesAndColumns((AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      cockroachDBExpressionGenerator0.getRandomType();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateJoin((CockroachDBSelect) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateHaving((CockroachDBSelect) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateGroupBy((CockroachDBSelect) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateGroupBy(cockroachDBSelect0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateDistinct((CockroachDBSelect) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0.setColumns((List<CockroachDBSchema.CockroachDBColumn>) null);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator1.getRandomType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.getRandomJoinClauses();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateUnoptimizedQueryString((CockroachDBSelect) null, (CockroachDBExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateFetchColumns(true);
      cockroachDBSelect0.setFromTables(list0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateUnoptimizedQueryString(cockroachDBSelect0, (CockroachDBExpression) cockroachDBSelect0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class sqlancer.cockroachdb.ast.CockroachDBColumnReference cannot be cast to class sqlancer.cockroachdb.ast.CockroachDBTableReference (sqlancer.cockroachdb.ast.CockroachDBColumnReference and sqlancer.cockroachdb.ast.CockroachDBTableReference are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7da30472)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateOptimizedQueryString((CockroachDBSelect) null, (CockroachDBExpression) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateExplainQuery((CockroachDBSelect) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getBit(2147483645);
      // Undeclared exception!
      cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.BIT;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // BIT(-1)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0.getRandomType();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateColumn(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getVarBit(2252355);
      cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertEquals("NULL", cockroachDBExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.INT;
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBAggregate.CockroachDBAggregateFunction cockroachDBAggregate_CockroachDBAggregateFunction0 = CockroachDBAggregate.CockroachDBAggregateFunction.STDDEV;
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateArgsForAggregate(cockroachDBSchema_CockroachDBCompositeDataType0, cockroachDBAggregate_CockroachDBAggregateFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0.getRandomType();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateExpression(cockroachDBSchema_CockroachDBCompositeDataType0, (-4426));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0.getRandomType();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateExpression(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = CockroachDBConstant.createIntConstant(0L);
      cockroachDBSelect0.setLimitClause(cockroachDBConstant_CockroachDBIntConstant0);
      boolean boolean0 = cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateOr(cockroachDBSelect0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      cockroachDBSelect0.setWhereClause(cockroachDBSelect0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateOr(cockroachDBSelect0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateAnd(cockroachDBSelect0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      cockroachDBSelect0.setWhereClause(cockroachDBSelect0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateAnd(cockroachDBSelect0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateHaving(cockroachDBSelect0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      cockroachDBSelect0.setWhereClause(cockroachDBSelect0);
      boolean boolean0 = cockroachDBExpressionGenerator0.mutateWhere(cockroachDBSelect0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutateWhere(cockroachDBSelect0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      cockroachDBExpressionGenerator0.mutateDistinct(cockroachDBSelect0);
      assertTrue(cockroachDBSelect0.isDistinct());
      
      boolean boolean0 = cockroachDBExpressionGenerator0.mutateDistinct(cockroachDBSelect0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      boolean boolean0 = cockroachDBExpressionGenerator0.mutateJoin(cockroachDBSelect0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBBugs.bug131640 = false;
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutate(cockroachDBSelect0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.mutate((CockroachDBSelect) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("B1Dv", cockroachDBSchema_CockroachDBCompositeDataType0, false, false);
      List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      cockroachDBExpressionGenerator0.setColumns(list0);
      List<CockroachDBExpression> list1 = cockroachDBExpressionGenerator0.generateFetchColumns(false);
      assertEquals(2, list1.size());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateFetchColumns(false);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBExpression> list0 = cockroachDBSelect0.getOrderByClauses();
      cockroachDBSelect0.setFromTables(list0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateUnoptimizedQueryString(cockroachDBSelect0, (CockroachDBExpression) cockroachDBSelect0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
      // Undeclared exception!
      cockroachDBExpressionGenerator0.generateOptimizedQueryString(cockroachDBSelect0, (CockroachDBExpression) cockroachDBSelect0, false);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateOptimizedQueryString(cockroachDBSelect0, (CockroachDBExpression) cockroachDBSelect0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateOptimizedQueryString(cockroachDBSelect0, (CockroachDBExpression) cockroachDBSelect0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
      LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
      CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable("sqlancer.materializc.MateriaKizeOptYons", linkedList0, linkedList1, false);
      List<CockroachDBSchema.CockroachDBTable> list0 = List.of(cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0, cockroachDBSchema_CockroachDBTable0);
      AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(list0);
      cockroachDBExpressionGenerator0.setTablesAndColumns(abstractTables0);
      List<CockroachDBJoin> list1 = cockroachDBExpressionGenerator0.getRandomJoinClauses();
      assertTrue(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("", cockroachDBSchema_CockroachDBCompositeDataType0, false, true);
      List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0.setColumns(list0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator1.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertNotNull(cockroachDBExpression0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("", cockroachDBSchema_CockroachDBCompositeDataType0, false, true);
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn1 = new CockroachDBSchema.CockroachDBColumn("", (CockroachDBSchema.CockroachDBCompositeDataType) null, true, false);
      List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn1);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0.setColumns(list0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator1.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertNotNull(cockroachDBExpression0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.ARRAY;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertNotNull(cockroachDBExpression0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.TIMETZ;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.TIME;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.JSONB;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertEquals("NULL", cockroachDBExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.DECIMAL;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.TIMESTAMPTZ;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.TIMESTAMP;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.SERIAL;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.BYTES;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.FLOAT;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.STRING;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0.getRandomType();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.INTERVAL;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType1 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("&hv!_fl 47'uJU(M", cockroachDBSchema_CockroachDBCompositeDataType1, false, true);
      List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0.setColumns(list0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator1.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getVarBit(3373684);
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("!<6", cockroachDBSchema_CockroachDBCompositeDataType0, false, false);
      List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0.setColumns(list0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator1.generateAggregate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
      CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn("", (CockroachDBSchema.CockroachDBCompositeDataType) null, true, true);
      linkedList0.add(cockroachDBSchema_CockroachDBColumn0);
      cockroachDBExpressionGenerator0.setColumns((List<CockroachDBSchema.CockroachDBColumn>) linkedList0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0.getRandomType();
      assertNull(cockroachDBSchema_CockroachDBCompositeDataType0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.INTERVAL;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBAggregate.CockroachDBAggregateFunction cockroachDBAggregate_CockroachDBAggregateFunction0 = CockroachDBAggregate.CockroachDBAggregateFunction.COUNT_ROWS;
      CockroachDBAggregate cockroachDBAggregate0 = cockroachDBExpressionGenerator0.generateArgsForAggregate(cockroachDBSchema_CockroachDBCompositeDataType0, cockroachDBAggregate_CockroachDBAggregateFunction0);
      assertEquals(CockroachDBAggregate.CockroachDBAggregateFunction.COUNT_ROWS, cockroachDBAggregate0.getFunc());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.getOrderingTerms();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
      // Undeclared exception!
      cockroachDBExpressionGenerator0.getOrderingTerms();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBNotOperation cockroachDBNotOperation0 = (CockroachDBNotOperation)cockroachDBExpressionGenerator0.negatePredicate((CockroachDBExpression) cockroachDBSelect0);
      assertFalse(cockroachDBNotOperation0.omitBracketsWhenPrinting());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.BOOL;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0.get();
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
      CockroachDBUnaryPostfixOperation cockroachDBUnaryPostfixOperation0 = (CockroachDBUnaryPostfixOperation)cockroachDBExpressionGenerator0.isNull(cockroachDBExpression0);
      assertEquals(UnaryOperation.OperatorKind.POSTFIX, cockroachDBUnaryPostfixOperation0.getOperatorKind());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateBooleanExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      LinkedList<CockroachDBSchema.CockroachDBTable> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBTable>();
      AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(linkedList0);
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0.setTablesAndColumns(abstractTables0);
      List<CockroachDBJoin> list0 = cockroachDBExpressionGenerator1.getRandomJoinClauses();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateHavingClause();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.getTableRefs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generatePredicate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState1 = cockroachDBExpressionGenerator0.getGlobalState();
      assertSame(cockroachDBProvider_CockroachDBGlobalState1, cockroachDBProvider_CockroachDBGlobalState0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator((CockroachDBProvider.CockroachDBGlobalState) null);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      // Undeclared exception!
      try { 
        cockroachDBExpressionGenerator0.generateExplainQuery(cockroachDBSelect0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }
}
