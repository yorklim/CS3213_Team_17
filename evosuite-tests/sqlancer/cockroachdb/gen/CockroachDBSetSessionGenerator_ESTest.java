/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:35:30 GMT 2025
 */

package sqlancer.cockroachdb.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.gen.CockroachDBSetSessionGenerator;
import sqlancer.common.query.SQLQueryAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBSetSessionGenerator_ESTest extends CockroachDBSetSessionGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Random.setNextRandom(1098);
      SQLQueryAdapter sQLQueryAdapter0 = CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("SET SESSION VECTORIZE=off;", sQLQueryAdapter0.getQueryString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Random.setNextRandom(1732);
      SQLQueryAdapter sQLQueryAdapter0 = CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("SET SESSION SQL_SAFE_UPDATES=off;", sQLQueryAdapter0.getQueryString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Random.setNextRandom((-243286476));
      SQLQueryAdapter sQLQueryAdapter0 = CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("SET SESSION DISTSQL=off;", sQLQueryAdapter0.getLogString());
      
      CockroachDBSetSessionGenerator.onOff((CockroachDBProvider.CockroachDBGlobalState) null);
      SQLQueryAdapter sQLQueryAdapter1 = CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("SET SESSION ENABLE_IMPLICIT_SELECT_FOR_UPDATE=true;", sQLQueryAdapter1.getLogString());
      
      String string0 = CockroachDBSetSessionGenerator.onOff((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("false", string0);
      
      CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      SQLQueryAdapter sQLQueryAdapter2 = CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("SET SESSION SERIAL_NORMALIZATION='virtual_sequence';", sQLQueryAdapter2.getLogString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SQLQueryAdapter sQLQueryAdapter0 = CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("SET SESSION BYTEA_OUTPUT=hex;", sQLQueryAdapter0.getLogString());
      
      SQLQueryAdapter sQLQueryAdapter1 = CockroachDBSetSessionGenerator.create((CockroachDBProvider.CockroachDBGlobalState) null);
      assertEquals("SET SESSION DEFAULT_INT_SIZE=8;", sQLQueryAdapter1.getLogString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      Random.setNextRandom(37);
      // Undeclared exception!
      try { 
        CockroachDBSetSessionGenerator.create(cockroachDBProvider_CockroachDBGlobalState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBSetSessionGenerator$CockroachDBSetting", e);
      }
  }
}
