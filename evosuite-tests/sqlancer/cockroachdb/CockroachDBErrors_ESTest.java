/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:02:00 GMT 2025
 */

package sqlancer.cockroachdb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBErrors;
import sqlancer.common.query.ExpectedErrors;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBErrors_ESTest extends CockroachDBErrors_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      List<String> list0 = CockroachDBErrors.getTransactionErrors();
      LinkedList<Pattern> linkedList0 = new LinkedList<Pattern>();
      ExpectedErrors expectedErrors0 = new ExpectedErrors(list0, linkedList0);
      CockroachDBErrors.addExpressionErrors(expectedErrors0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        CockroachDBErrors.addTransactionErrors((ExpectedErrors) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.CockroachDBErrors", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      List<String> list0 = CockroachDBErrors.getExpressionErrors();
      assertEquals(200, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      List<String> list0 = CockroachDBErrors.getTransactionErrors();
      LinkedList<Pattern> linkedList0 = new LinkedList<Pattern>();
      ExpectedErrors expectedErrors0 = new ExpectedErrors(list0, linkedList0);
      CockroachDBErrors.addTransactionErrors(expectedErrors0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        CockroachDBErrors.addExpressionErrors((ExpectedErrors) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.CockroachDBErrors", e);
      }
  }
}
