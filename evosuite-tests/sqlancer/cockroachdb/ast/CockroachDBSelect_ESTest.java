/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:09:23 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.Randomly;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBJoin;
import sqlancer.cockroachdb.ast.CockroachDBSelect;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBSelect_ESTest extends CockroachDBSelect_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.FULL;
      CockroachDBJoin cockroachDBJoin0 = CockroachDBJoin.createJoin(cockroachDBSelect0, cockroachDBSelect0, cockroachDBJoin_JoinType0, cockroachDBSelect0);
      List<CockroachDBJoin> list0 = List.of(cockroachDBJoin0, cockroachDBJoin0, cockroachDBJoin0, cockroachDBJoin0, cockroachDBJoin0, cockroachDBJoin0);
      cockroachDBSelect0.setJoinClauses(list0);
      List<CockroachDBJoin> list1 = cockroachDBSelect0.getJoinClauses();
      assertEquals(6, list1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      cockroachDBSelect0.setJoinList((List<CockroachDBExpression>) null);
      // Undeclared exception!
      try { 
        cockroachDBSelect0.getJoinClauses();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBSelect", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBExpression[] cockroachDBExpressionArray0 = new CockroachDBExpression[1];
      cockroachDBExpressionArray0[0] = (CockroachDBExpression) cockroachDBSelect0;
      List<CockroachDBExpression> list0 = Randomly.nonEmptySubset(cockroachDBExpressionArray0);
      cockroachDBSelect0.setJoinList(list0);
      // Undeclared exception!
      try { 
        cockroachDBSelect0.getJoinClauses();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class sqlancer.cockroachdb.ast.CockroachDBSelect cannot be cast to class sqlancer.cockroachdb.ast.CockroachDBJoin (sqlancer.cockroachdb.ast.CockroachDBSelect and sqlancer.cockroachdb.ast.CockroachDBJoin are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @4079a4c3)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBSelect", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      boolean boolean0 = cockroachDBSelect0.isDistinct();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBJoin> list0 = cockroachDBSelect0.getJoinClauses();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
      cockroachDBSelect0.setDistinct(true);
      boolean boolean0 = cockroachDBSelect0.isDistinct();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      // Undeclared exception!
      try { 
        cockroachDBSelect0.setJoinClauses((List<CockroachDBJoin>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBSelect", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      // Undeclared exception!
      try { 
        cockroachDBSelect0.asString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }
}
