/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:41:29 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.ast.CockroachDBBinaryArithmeticOperation;
import sqlancer.cockroachdb.ast.CockroachDBExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBBinaryArithmeticOperation_ESTest extends CockroachDBBinaryArithmeticOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0 = CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator.getRandom();
      String string0 = cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0.getTextRepresentation();
      assertEquals("+", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0 = CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator.ADD;
      CockroachDBBinaryArithmeticOperation cockroachDBBinaryArithmeticOperation0 = new CockroachDBBinaryArithmeticOperation((CockroachDBExpression) null, (CockroachDBExpression) null, cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0);
      assertEquals("+", cockroachDBBinaryArithmeticOperation0.getOperatorRepresentation());
  }
}
