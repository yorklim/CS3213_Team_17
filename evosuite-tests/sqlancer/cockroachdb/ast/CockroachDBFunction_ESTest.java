/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:18:12 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBFunction;
import sqlancer.cockroachdb.ast.CockroachDBFunctionCall;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBFunction_ESTest extends CockroachDBFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.IF;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator((CockroachDBProvider.CockroachDBGlobalState) null);
      // Undeclared exception!
      try { 
        cockroachDBFunction0.getCall(cockroachDBSchema_CockroachDBCompositeDataType0, cockroachDBExpressionGenerator0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CockroachDBFunction[] cockroachDBFunctionArray0 = CockroachDBFunction.values();
      assertEquals(46, cockroachDBFunctionArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.valueOf("INITCAP");
      assertEquals("INITCAP", cockroachDBFunction0.getFunctionName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.TIMESTAMP;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.CURRENT_SCHEMA;
      CockroachDBSchema.CockroachDBDataType[] cockroachDBSchema_CockroachDBDataTypeArray0 = cockroachDBFunction0.getArgumentTypes(cockroachDBSchema_CockroachDBCompositeDataType0);
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      List<CockroachDBExpression> list0 = cockroachDBFunction0.getArgumentsForReturnType(cockroachDBExpressionGenerator0, 7, cockroachDBSchema_CockroachDBDataTypeArray0, cockroachDBSchema_CockroachDBCompositeDataType0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.ILIKE_ESCAPE;
      CockroachDBSchema.CockroachDBDataType[] cockroachDBSchema_CockroachDBDataTypeArray0 = cockroachDBFunction0.getArgumentTypes((CockroachDBSchema.CockroachDBCompositeDataType) null);
      assertEquals(3, cockroachDBSchema_CockroachDBDataTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.CURRENT_SCHEMA;
      // Undeclared exception!
      try { 
        cockroachDBFunction0.isCompatibleWithReturnType((CockroachDBSchema.CockroachDBCompositeDataType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.QUOTE_IDENT;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      boolean boolean0 = cockroachDBFunction0.isCompatibleWithReturnType(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.CHAR_LENGTH1;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getInt((-1373));
      boolean boolean0 = cockroachDBFunction0.isCompatibleWithReturnType(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.ARRAY;
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.CHARACTER_LENGTH2;
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBSchema.CockroachDBDataType[] cockroachDBSchema_CockroachDBDataTypeArray0 = new CockroachDBSchema.CockroachDBDataType[2];
      cockroachDBSchema_CockroachDBDataTypeArray0[0] = cockroachDBSchema_CockroachDBDataType0;
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getVarBit(105);
      // Undeclared exception!
      try { 
        cockroachDBFunction0.getArgumentsForReturnType(cockroachDBExpressionGenerator0, (-965), cockroachDBSchema_CockroachDBDataTypeArray0, cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      List<CockroachDBFunction> list0 = CockroachDBFunction.getFunctionsCompatibleWith(cockroachDBSchema_CockroachDBCompositeDataType0);
      assertEquals(13, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.IF;
      // Undeclared exception!
      try { 
        cockroachDBFunction0.getArgumentTypes((CockroachDBSchema.CockroachDBCompositeDataType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBFunction$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.NULLIF;
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.ARRAY;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      // Undeclared exception!
      try { 
        cockroachDBFunction0.getCall(cockroachDBSchema_CockroachDBCompositeDataType0, (CockroachDBExpressionGenerator) null, (-312));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.CURRENT_SCHEMA;
      CockroachDBSchema.CockroachDBDataType[] cockroachDBSchema_CockroachDBDataTypeArray0 = cockroachDBFunction0.getArgumentTypes(cockroachDBSchema_CockroachDBCompositeDataType0);
      CockroachDBFunction cockroachDBFunction1 = CockroachDBFunction.ILIKE_ESCAPE;
      // Undeclared exception!
      try { 
        cockroachDBFunction1.getArgumentsForReturnType((CockroachDBExpressionGenerator) null, 2711, cockroachDBSchema_CockroachDBDataTypeArray0, cockroachDBSchema_CockroachDBCompositeDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBFunction$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.CURRENT_SCHEMA;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getVarBit((-129));
      CockroachDBFunctionCall cockroachDBFunctionCall0 = cockroachDBFunction0.getCall(cockroachDBSchema_CockroachDBCompositeDataType0, (CockroachDBExpressionGenerator) null, (-129));
      assertEquals(CockroachDBFunction.CURRENT_SCHEMA, cockroachDBFunctionCall0.getFunction());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.MD5;
      String string0 = cockroachDBFunction0.getFunctionName();
      assertEquals("MD5", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.MD5;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      // Undeclared exception!
      try { 
        cockroachDBFunction0.getCall(cockroachDBSchema_CockroachDBCompositeDataType0, (CockroachDBExpressionGenerator) null, (-1094));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        CockroachDBFunction.getFunctionsCompatibleWith((CockroachDBSchema.CockroachDBCompositeDataType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBFunction", e);
      }
  }
}
