/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:04:25 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBTypeAnnotation;
import sqlancer.common.visitor.UnaryOperation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBTypeAnnotation_ESTest extends CockroachDBTypeAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBTypeAnnotation cockroachDBTypeAnnotation0 = new CockroachDBTypeAnnotation((CockroachDBExpression) null, cockroachDBSchema_CockroachDBCompositeDataType0);
      String string0 = cockroachDBTypeAnnotation0.getOperatorRepresentation();
      assertEquals(":::INT2", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.SERIAL;
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(cockroachDBSchema_CockroachDBDataType0);
      CockroachDBTypeAnnotation cockroachDBTypeAnnotation0 = new CockroachDBTypeAnnotation((CockroachDBExpression) null, cockroachDBSchema_CockroachDBCompositeDataType0);
      // Undeclared exception!
      try { 
        cockroachDBTypeAnnotation0.getOperatorRepresentation();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
      CockroachDBTypeAnnotation cockroachDBTypeAnnotation0 = new CockroachDBTypeAnnotation((CockroachDBExpression) null, cockroachDBSchema_CockroachDBCompositeDataType0);
      UnaryOperation.OperatorKind unaryOperation_OperatorKind0 = cockroachDBTypeAnnotation0.getOperatorKind();
      assertEquals(UnaryOperation.OperatorKind.POSTFIX, unaryOperation_OperatorKind0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CockroachDBTypeAnnotation cockroachDBTypeAnnotation0 = new CockroachDBTypeAnnotation((CockroachDBExpression) null, (CockroachDBSchema.CockroachDBCompositeDataType) null);
      // Undeclared exception!
      try { 
        cockroachDBTypeAnnotation0.getOperatorRepresentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBTypeAnnotation", e);
      }
  }
}
