/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 04:53:58 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBIndexReference;
import sqlancer.cockroachdb.ast.CockroachDBTableReference;
import sqlancer.common.schema.TableIndex;
import sqlancer.common.visitor.UnaryOperation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBIndexReference_ESTest extends CockroachDBIndexReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CockroachDBTableReference cockroachDBTableReference0 = new CockroachDBTableReference((CockroachDBSchema.CockroachDBTable) null);
      CockroachDBIndexReference cockroachDBIndexReference0 = new CockroachDBIndexReference(cockroachDBTableReference0, (TableIndex) null);
      // Undeclared exception!
      try { 
        cockroachDBIndexReference0.getOperatorRepresentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBIndexReference", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CockroachDBIndexReference cockroachDBIndexReference0 = null;
      try {
        cockroachDBIndexReference0 = new CockroachDBIndexReference((CockroachDBTableReference) null, (TableIndex) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cockroachdb.ast.CockroachDBIndexReference", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
      LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
      CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable("", linkedList0, linkedList1, true);
      CockroachDBTableReference cockroachDBTableReference0 = new CockroachDBTableReference(cockroachDBSchema_CockroachDBTable0);
      TableIndex tableIndex0 = TableIndex.create("");
      CockroachDBIndexReference cockroachDBIndexReference0 = new CockroachDBIndexReference(cockroachDBTableReference0, tableIndex0);
      String string0 = cockroachDBIndexReference0.getOperatorRepresentation();
      assertEquals("@{FORCE_INDEX=,ASC}", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
      LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
      CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable("", linkedList0, linkedList1, true);
      CockroachDBTableReference cockroachDBTableReference0 = new CockroachDBTableReference(cockroachDBSchema_CockroachDBTable0);
      TableIndex tableIndex0 = TableIndex.create("");
      CockroachDBIndexReference cockroachDBIndexReference0 = new CockroachDBIndexReference(cockroachDBTableReference0, tableIndex0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBIndexReference0.getExpression();
      assertSame(cockroachDBExpression0, cockroachDBTableReference0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
      LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
      CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable("", linkedList0, linkedList1, true);
      CockroachDBTableReference cockroachDBTableReference0 = new CockroachDBTableReference(cockroachDBSchema_CockroachDBTable0);
      TableIndex tableIndex0 = TableIndex.create("");
      CockroachDBIndexReference cockroachDBIndexReference0 = new CockroachDBIndexReference(cockroachDBTableReference0, tableIndex0);
      boolean boolean0 = cockroachDBIndexReference0.omitBracketsWhenPrinting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
      LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
      CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable("", linkedList0, linkedList1, true);
      CockroachDBTableReference cockroachDBTableReference0 = new CockroachDBTableReference(cockroachDBSchema_CockroachDBTable0);
      TableIndex tableIndex0 = TableIndex.create("");
      CockroachDBIndexReference cockroachDBIndexReference0 = new CockroachDBIndexReference(cockroachDBTableReference0, tableIndex0);
      UnaryOperation.OperatorKind unaryOperation_OperatorKind0 = cockroachDBIndexReference0.getOperatorKind();
      assertEquals(UnaryOperation.OperatorKind.POSTFIX, unaryOperation_OperatorKind0);
  }
}
