/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:14:09 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.ast.CockroachDBAlias;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBSelect;
import sqlancer.common.visitor.UnaryOperation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBAlias_ESTest extends CockroachDBAlias_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByExpressions();
      CockroachDBConstant.CockroachDBArrayConstant cockroachDBConstant_CockroachDBArrayConstant0 = new CockroachDBConstant.CockroachDBArrayConstant(list0);
      CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias(cockroachDBConstant_CockroachDBArrayConstant0, "");
      CockroachDBExpression cockroachDBExpression0 = cockroachDBAlias0.getExpression();
      assertSame(cockroachDBConstant_CockroachDBArrayConstant0, cockroachDBExpression0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias((CockroachDBExpression) null, "sqlancer.cockroachdb.ast.CockroachDBAlias");
      boolean boolean0 = cockroachDBAlias0.omitBracketsWhenPrinting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias((CockroachDBExpression) null, "sqlancer.cockroachdb.ast.CockroachDBAlias");
      String string0 = cockroachDBAlias0.getOperatorRepresentation();
      assertEquals(" as sqlancer.cockroachdb.ast.CockroachDBAlias", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias((CockroachDBExpression) null, "sqlancer.cockroachdb.ast.CockroachDBAlias");
      CockroachDBExpression cockroachDBExpression0 = cockroachDBAlias0.getExpression();
      assertNull(cockroachDBExpression0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant("<=");
      CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias(cockroachDBConstant_CockroachDBBitConstant0, "<=");
      UnaryOperation.OperatorKind unaryOperation_OperatorKind0 = cockroachDBAlias0.getOperatorKind();
      assertEquals(UnaryOperation.OperatorKind.POSTFIX, unaryOperation_OperatorKind0);
  }
}
