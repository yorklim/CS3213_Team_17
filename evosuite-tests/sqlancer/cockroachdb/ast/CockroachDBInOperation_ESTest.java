/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:26:57 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBInOperation;
import sqlancer.cockroachdb.ast.CockroachDBSelect;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBInOperation_ESTest extends CockroachDBInOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CockroachDBConstant.CockroachDBNullConstant cockroachDBConstant_CockroachDBNullConstant0 = new CockroachDBConstant.CockroachDBNullConstant();
      CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation(cockroachDBConstant_CockroachDBNullConstant0, (List<CockroachDBExpression>) null);
      List<CockroachDBExpression> list0 = cockroachDBInOperation0.getRight();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(1013L);
      LinkedList<CockroachDBExpression> linkedList0 = new LinkedList<CockroachDBExpression>();
      CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation(cockroachDBConstant_CockroachDBBitConstant0, linkedList0);
      linkedList0.add((CockroachDBExpression) cockroachDBInOperation0);
      List<CockroachDBExpression> list0 = cockroachDBInOperation0.getRight();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getVarBit((-2642));
      List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, (-2642), 0);
      CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation((CockroachDBExpression) null, list0);
      List<CockroachDBExpression> list1 = cockroachDBInOperation0.getRight();
      assertTrue(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByClause();
      CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation(cockroachDBSelect0, list0);
      CockroachDBSelect cockroachDBSelect1 = (CockroachDBSelect)cockroachDBInOperation0.getLeft();
      assertFalse(cockroachDBSelect1.isDistinct());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getVarBit((-2642));
      List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, (-2642), 0);
      CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation((CockroachDBExpression) null, list0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBInOperation0.getLeft();
      assertNull(cockroachDBExpression0);
  }
}
