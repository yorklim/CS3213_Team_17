/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 05:48:55 GMT 2025
 */

package sqlancer.cockroachdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.ast.CockroachDBBinaryComparisonOperator;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBMultiValuedComparison;
import sqlancer.cockroachdb.ast.CockroachDBSelect;
import sqlancer.cockroachdb.ast.CockroachDBUnaryArithmeticOperation;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CockroachDBMultiValuedComparison_ESTest extends CockroachDBMultiValuedComparison_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = CockroachDBConstant.createIntConstant(0L);
      CockroachDBUnaryArithmeticOperation.CockroachDBUnaryAritmeticOperator cockroachDBUnaryArithmeticOperation_CockroachDBUnaryAritmeticOperator0 = CockroachDBUnaryArithmeticOperation.CockroachDBUnaryAritmeticOperator.MINUS;
      CockroachDBUnaryArithmeticOperation cockroachDBUnaryArithmeticOperation0 = new CockroachDBUnaryArithmeticOperation(cockroachDBConstant_CockroachDBIntConstant0, cockroachDBUnaryArithmeticOperation_CockroachDBUnaryAritmeticOperator0);
      LinkedList<CockroachDBExpression> linkedList0 = new LinkedList<CockroachDBExpression>();
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType0 = CockroachDBMultiValuedComparison.MultiValuedComparisonType.ALL;
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.GREATER_EQUALS;
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison(cockroachDBUnaryArithmeticOperation0, linkedList0, cockroachDBMultiValuedComparison_MultiValuedComparisonType0, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType1 = cockroachDBMultiValuedComparison0.getType();
      assertEquals(CockroachDBMultiValuedComparison.MultiValuedComparisonType.ALL, cockroachDBMultiValuedComparison_MultiValuedComparisonType1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = CockroachDBConstant.createIntConstant(0L);
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      CockroachDBUnaryArithmeticOperation.CockroachDBUnaryAritmeticOperator cockroachDBUnaryArithmeticOperation_CockroachDBUnaryAritmeticOperator0 = CockroachDBUnaryArithmeticOperation.CockroachDBUnaryAritmeticOperator.MINUS;
      CockroachDBUnaryArithmeticOperation cockroachDBUnaryArithmeticOperation0 = new CockroachDBUnaryArithmeticOperation(cockroachDBConstant_CockroachDBIntConstant0, cockroachDBUnaryArithmeticOperation_CockroachDBUnaryAritmeticOperator0);
      LinkedList<CockroachDBExpression> linkedList0 = new LinkedList<CockroachDBExpression>();
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType0 = CockroachDBMultiValuedComparison.MultiValuedComparisonType.ALL;
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.GREATER_EQUALS;
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison(cockroachDBUnaryArithmeticOperation0, linkedList0, cockroachDBMultiValuedComparison_MultiValuedComparisonType0, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      linkedList0.add((CockroachDBExpression) cockroachDBSelect0);
      List<CockroachDBExpression> list0 = cockroachDBMultiValuedComparison0.getRight();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
      CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(cockroachDBProvider_CockroachDBGlobalState0);
      CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = CockroachDBConstant.createFloatConstant(13.637708561);
      CockroachDBBinaryComparisonOperator.CockroachDBComparisonOperator cockroachDBBinaryComparisonOperator_CockroachDBComparisonOperator0 = CockroachDBBinaryComparisonOperator.CockroachDBComparisonOperator.SMALLER;
      CockroachDBBinaryComparisonOperator cockroachDBBinaryComparisonOperator0 = new CockroachDBBinaryComparisonOperator(cockroachDBConstant_CockroachDBDoubleConstant0, cockroachDBConstant_CockroachDBDoubleConstant0, cockroachDBBinaryComparisonOperator_CockroachDBComparisonOperator0);
      CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0.isNull((CockroachDBExpression) cockroachDBBinaryComparisonOperator0);
      CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType.getInt(0);
      List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, 0);
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType0 = CockroachDBMultiValuedComparison.MultiValuedComparisonType.ANY;
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.EQUALS;
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison(cockroachDBExpression0, list0, cockroachDBMultiValuedComparison_MultiValuedComparisonType0, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      List<CockroachDBExpression> list1 = cockroachDBMultiValuedComparison0.getRight();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.getRandomGenericComparisonOperator();
      assertEquals(CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.SMALLER, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType0 = CockroachDBMultiValuedComparison.MultiValuedComparisonType.ANY;
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison((CockroachDBExpression) null, (List<CockroachDBExpression>) null, cockroachDBMultiValuedComparison_MultiValuedComparisonType0, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      cockroachDBMultiValuedComparison0.getLeft();
      assertEquals("<", cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0.getStringRepr());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.GREATER;
      String string0 = cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0.getStringRepr();
      assertEquals(">", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.SMALLER_EQUALS;
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByClause();
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison(cockroachDBSelect0, list0, (CockroachDBMultiValuedComparison.MultiValuedComparisonType) null, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      CockroachDBSelect cockroachDBSelect1 = (CockroachDBSelect)cockroachDBMultiValuedComparison0.getLeft();
      assertFalse(cockroachDBSelect1.isDistinct());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByExpressions();
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType0 = CockroachDBMultiValuedComparison.MultiValuedComparisonType.ALL;
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.EQUALS;
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison(cockroachDBSelect0, list0, cockroachDBMultiValuedComparison_MultiValuedComparisonType0, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator1 = cockroachDBMultiValuedComparison0.getOp();
      assertEquals(CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.EQUALS, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.getRandomGenericComparisonOperator();
      assertEquals(CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.SMALLER, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      
      CockroachDBConstant.CockroachDBNullConstant cockroachDBConstant_CockroachDBNullConstant0 = CockroachDBConstant.createNullConstant();
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType0 = CockroachDBMultiValuedComparison.MultiValuedComparisonType.ALL;
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison(cockroachDBConstant_CockroachDBNullConstant0, (List<CockroachDBExpression>) null, cockroachDBMultiValuedComparison_MultiValuedComparisonType0, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      cockroachDBMultiValuedComparison0.getRight();
      assertEquals("<", cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0.getStringRepr());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CockroachDBMultiValuedComparison.MultiValuedComparisonOperator cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0 = CockroachDBMultiValuedComparison.MultiValuedComparisonOperator.SMALLER_EQUALS;
      CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
      List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByClause();
      CockroachDBMultiValuedComparison cockroachDBMultiValuedComparison0 = new CockroachDBMultiValuedComparison(cockroachDBSelect0, list0, (CockroachDBMultiValuedComparison.MultiValuedComparisonType) null, cockroachDBMultiValuedComparison_MultiValuedComparisonOperator0);
      cockroachDBMultiValuedComparison0.getType();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CockroachDBMultiValuedComparison.MultiValuedComparisonType cockroachDBMultiValuedComparison_MultiValuedComparisonType0 = CockroachDBMultiValuedComparison.MultiValuedComparisonType.getRandom();
      assertEquals(CockroachDBMultiValuedComparison.MultiValuedComparisonType.ANY, cockroachDBMultiValuedComparison_MultiValuedComparisonType0);
  }
}
