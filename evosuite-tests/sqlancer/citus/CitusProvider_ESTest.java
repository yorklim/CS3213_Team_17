/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 10 15:58:48 GMT 2025
 */

package sqlancer.citus;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.citus.CitusGlobalState;
import sqlancer.citus.CitusProvider;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.postgres.PostgresGlobalState;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CitusProvider_ESTest extends CitusProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CitusGlobalState citusGlobalState0 = new CitusGlobalState();
      CitusProvider.Action citusProvider_Action0 = CitusProvider.Action.RESET;
      SQLQueryAdapter sQLQueryAdapter0 = citusProvider_Action0.getQuery((PostgresGlobalState) citusGlobalState0);
      assertEquals("RESET ALL;", sQLQueryAdapter0.getLogString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CitusGlobalState citusGlobalState0 = new CitusGlobalState();
      CitusProvider.Action citusProvider_Action0 = CitusProvider.Action.RESET_ROLE;
      SQLQueryAdapter sQLQueryAdapter0 = citusProvider_Action0.getQuery((PostgresGlobalState) citusGlobalState0);
      assertEquals("RESET ROLE;", sQLQueryAdapter0.getLogString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
      CitusProvider.Action citusProvider_Action0 = CitusProvider.Action.SET_CONSTRAINTS;
      SQLQueryAdapter sQLQueryAdapter0 = citusProvider_Action0.getQuery(postgresGlobalState0);
      assertEquals("SET CONSTRAINTS ALL DEFERRED;", sQLQueryAdapter0.getLogString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CitusProvider citusProvider0 = new CitusProvider();
      try { 
        citusProvider0.generateDatabase((PostgresGlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.query.SQLQueryAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CitusProvider citusProvider0 = new CitusProvider();
      try { 
        citusProvider0.createTables((PostgresGlobalState) null, 2732);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.citus.CitusProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CitusProvider citusProvider0 = new CitusProvider();
      CitusGlobalState citusGlobalState0 = new CitusGlobalState();
      // Undeclared exception!
      try { 
        citusProvider0.createTables(citusGlobalState0, 's');
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CitusGlobalState citusGlobalState0 = new CitusGlobalState();
      CitusProvider.Action citusProvider_Action0 = CitusProvider.Action.COMMIT;
      SQLQueryAdapter sQLQueryAdapter0 = citusProvider_Action0.getQuery((PostgresGlobalState) citusGlobalState0);
      assertEquals("ROLLBACK;", sQLQueryAdapter0.getLogString());
      assertTrue(sQLQueryAdapter0.couldAffectSchema());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CitusProvider citusProvider0 = new CitusProvider();
      // Undeclared exception!
      try { 
        citusProvider0.createDatabase((PostgresGlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.postgres.PostgresProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CitusProvider citusProvider0 = new CitusProvider();
      PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
      // Undeclared exception!
      try { 
        citusProvider0.getTestOracle(postgresGlobalState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.citus.CitusProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CitusProvider citusProvider0 = new CitusProvider();
      PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
      try { 
        citusProvider0.prepareTables(postgresGlobalState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.citus.CitusProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CitusProvider citusProvider0 = new CitusProvider();
      String string0 = citusProvider0.getDBMSName();
      assertEquals("citus", string0);
  }
}
