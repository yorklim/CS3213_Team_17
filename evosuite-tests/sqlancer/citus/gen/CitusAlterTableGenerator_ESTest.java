/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 10 15:51:44 GMT 2025
 */

package sqlancer.citus.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import sqlancer.citus.CitusGlobalState;
import sqlancer.citus.gen.CitusAlterTableGenerator;
import sqlancer.postgres.PostgresGlobalState;
import sqlancer.postgres.PostgresSchema;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CitusAlterTableGenerator_ESTest extends CitusAlterTableGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        CitusAlterTableGenerator.create((PostgresSchema.PostgresTable) null, (PostgresGlobalState) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.postgres.gen.PostgresAlterTableGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<PostgresSchema.PostgresColumn> linkedList0 = new LinkedList<PostgresSchema.PostgresColumn>();
      PostgresSchema.PostgresIndex postgresSchema_PostgresIndex0 = mock(PostgresSchema.PostgresIndex.class, new ViolatedAssumptionAnswer());
      List<PostgresSchema.PostgresIndex> list0 = List.of(postgresSchema_PostgresIndex0, postgresSchema_PostgresIndex0, postgresSchema_PostgresIndex0, postgresSchema_PostgresIndex0);
      LinkedList<PostgresSchema.PostgresIndex> linkedList1 = new LinkedList<PostgresSchema.PostgresIndex>(list0);
      PostgresSchema.PostgresTable.TableType postgresSchema_PostgresTable_TableType0 = PostgresSchema.PostgresTable.TableType.TEMPORARY;
      PostgresSchema.PostgresTable postgresSchema_PostgresTable0 = new PostgresSchema.PostgresTable("", linkedList0, linkedList1, postgresSchema_PostgresTable_TableType0, (List<PostgresSchema.PostgresStatisticsObject>) null, true, true);
      CitusGlobalState citusGlobalState0 = new CitusGlobalState();
      CitusAlterTableGenerator citusAlterTableGenerator0 = new CitusAlterTableGenerator(postgresSchema_PostgresTable0, citusGlobalState0, false);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<PostgresSchema.PostgresColumn> linkedList0 = new LinkedList<PostgresSchema.PostgresColumn>();
      LinkedList<PostgresSchema.PostgresIndex> linkedList1 = new LinkedList<PostgresSchema.PostgresIndex>();
      PostgresSchema.PostgresTable.TableType postgresSchema_PostgresTable_TableType0 = PostgresSchema.PostgresTable.TableType.STANDARD;
      LinkedList<PostgresSchema.PostgresStatisticsObject> linkedList2 = new LinkedList<PostgresSchema.PostgresStatisticsObject>();
      PostgresSchema.PostgresTable postgresSchema_PostgresTable0 = new PostgresSchema.PostgresTable((String) null, linkedList0, linkedList1, postgresSchema_PostgresTable_TableType0, linkedList2, false, false);
      PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
      // Undeclared exception!
      try { 
        CitusAlterTableGenerator.create(postgresSchema_PostgresTable0, postgresGlobalState0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.postgres.gen.PostgresAlterTableGenerator", e);
      }
  }
}
