/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 13 14:30:08 GMT 2025
 */

package sqlancer.cnosdb.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cnosdb.CnosDBGlobalState;
import sqlancer.cnosdb.client.CnosDBResultSet;
import sqlancer.cnosdb.query.CnosDBSelectQuery;
import sqlancer.common.query.ExpectedErrors;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBSelectQuery_ESTest extends CnosDBSelectQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale.IsoCountryCode locale_IsoCountryCode0 = Locale.IsoCountryCode.PART1_ALPHA2;
      Set<String> set0 = Locale.getISOCountries(locale_IsoCountryCode0);
      LinkedList<Pattern> linkedList0 = new LinkedList<Pattern>();
      ExpectedErrors expectedErrors0 = new ExpectedErrors(set0, linkedList0);
      CnosDBSelectQuery cnosDBSelectQuery0 = new CnosDBSelectQuery((String) null, expectedErrors0);
      CnosDBResultSet cnosDBResultSet0 = cnosDBSelectQuery0.getResultSet();
      assertNull(cnosDBResultSet0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale.IsoCountryCode locale_IsoCountryCode0 = Locale.IsoCountryCode.PART1_ALPHA2;
      Set<String> set0 = Locale.getISOCountries(locale_IsoCountryCode0);
      LinkedList<Pattern> linkedList0 = new LinkedList<Pattern>();
      ExpectedErrors expectedErrors0 = new ExpectedErrors(set0, linkedList0);
      CnosDBSelectQuery cnosDBSelectQuery0 = new CnosDBSelectQuery((String) null, expectedErrors0);
      boolean boolean0 = cnosDBSelectQuery0.couldAffectSchema();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExpectedErrors expectedErrors0 = new ExpectedErrors();
      CnosDBSelectQuery cnosDBSelectQuery0 = new CnosDBSelectQuery("sqlancer.cnosdb.query.CnosDBSelectQuery", expectedErrors0);
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      try { 
        cnosDBSelectQuery0.executeAndGet(cnosDBGlobalState0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.query.CnosDBSelectQuery", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExpectedErrors expectedErrors0 = new ExpectedErrors();
      CnosDBSelectQuery cnosDBSelectQuery0 = new CnosDBSelectQuery("&gQ1f,V", expectedErrors0);
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      try { 
        cnosDBSelectQuery0.execute(cnosDBGlobalState0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.query.CnosDBSelectQuery", e);
      }
  }
}
