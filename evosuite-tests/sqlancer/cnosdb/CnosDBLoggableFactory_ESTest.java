/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 04:00:25 GMT 2025
 */

package sqlancer.cnosdb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import sqlancer.cnosdb.CnosDBLoggableFactory;
import sqlancer.cnosdb.query.CnosDBQueryAdapter;
import sqlancer.common.log.Loggable;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBLoggableFactory_ESTest extends CnosDBLoggableFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      Loggable loggable0 = cnosDBLoggableFactory0.infoToLoggable("smVN88Q.H<:40", "sbjf:", (String) null, (-1L));
      assertEquals("-- Time: smVN88Q.H<:40\n-- Database: sbjf:\n-- Database version: null\n-- seed value: -1\n", loggable0.getLogString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      // Undeclared exception!
      try { 
        cnosDBLoggableFactory0.createLoggable((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.setOriginForDelegate((StackTraceElement) null);
      // Undeclared exception!
      try { 
        cnosDBLoggableFactory0.convertStacktraceToLoggable(mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      Loggable loggable0 = cnosDBLoggableFactory0.createLoggable("", (String) null);
      assertEquals(";", loggable0.getLogString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      Loggable loggable0 = cnosDBLoggableFactory0.createLoggable("sbjf:");
      assertEquals("sbjf:;\n", loggable0.getLogString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      Loggable loggable0 = cnosDBLoggableFactory0.createLoggable("SELECT mz_indexes.name, mz_databases.name FROM mz_indexes JOIN mz_relations ON mz_indexes.on_id = mz_relations.id JOIN mz_schemas ON mz_relations.schema_id = mz_schemas.id JOIN mz_databases ON mz_schemas.database_id = mz_databases.id WHERE mz_databases.name = '%s';", "");
      assertEquals("SELECT mz_indexes.name, mz_databases.name FROM mz_indexes JOIN mz_relations ON mz_indexes.on_id = mz_relations.id JOIN mz_schemas ON mz_relations.schema_id = mz_schemas.id JOIN mz_databases ON mz_schemas.database_id = mz_databases.id WHERE mz_databases.name = '%s';", loggable0.getLogString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      CnosDBQueryAdapter cnosDBQueryAdapter0 = cnosDBLoggableFactory0.getQueryForStateToReproduce((String) null);
      CnosDBQueryAdapter cnosDBQueryAdapter1 = cnosDBLoggableFactory0.commentOutQuery(cnosDBQueryAdapter0);
      assertEquals("-- null", cnosDBQueryAdapter1.getLogString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
      MockThrowable mockThrowable0 = new MockThrowable();
      Loggable loggable0 = cnosDBLoggableFactory0.convertStacktraceToLoggable(mockThrowable0);
      //  // Unstable assertion: assertEquals("--jdk.internal.reflect.GeneratedConstructorAccessor41.newInstance(Unknown Source)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--", loggable0.getLogString());
  }
}
