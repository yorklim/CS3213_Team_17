/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 04:14:40 GMT 2025
 */

package sqlancer.cnosdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.Randomly;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.ast.CnosDBConstant;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.ast.CnosDBInOperation;
import sqlancer.cnosdb.ast.CnosDBSelect;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBInOperation_ESTest extends CnosDBInOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CnosDBConstant.CnosDBNullConstant cnosDBConstant_CnosDBNullConstant0 = new CnosDBConstant.CnosDBNullConstant();
      CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[2];
      List<CnosDBExpression> list0 = Randomly.nonEmptySubset(cnosDBExpressionArray0);
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation(cnosDBConstant_CnosDBNullConstant0, list0, true);
      boolean boolean0 = cnosDBInOperation0.isTrue();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CnosDBConstant.BooleanConstant cnosDBConstant_BooleanConstant0 = new CnosDBConstant.BooleanConstant(false);
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation(cnosDBConstant_BooleanConstant0, (List<CnosDBExpression>) null, false);
      cnosDBInOperation0.getListElements();
      assertFalse(cnosDBInOperation0.isTrue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CnosDBConstant.CnosDBNullConstant cnosDBConstant_CnosDBNullConstant0 = new CnosDBConstant.CnosDBNullConstant();
      CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[2];
      List<CnosDBExpression> list0 = Randomly.nonEmptySubset(cnosDBExpressionArray0);
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation(cnosDBConstant_CnosDBNullConstant0, list0, true);
      cnosDBInOperation0.getListElements();
      assertTrue(cnosDBInOperation0.isTrue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation((CnosDBExpression) null, (List<CnosDBExpression>) null, false);
      cnosDBInOperation0.getExpr();
      assertFalse(cnosDBInOperation0.isTrue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CnosDBConstant.TimeStampConstant cnosDBConstant_TimeStampConstant0 = new CnosDBConstant.TimeStampConstant((-249L));
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.STRING;
      CnosDBConstant cnosDBConstant0 = cnosDBConstant_TimeStampConstant0.cast(cnosDBSchema_CnosDBDataType0);
      LinkedList<CnosDBExpression> linkedList0 = new LinkedList<CnosDBExpression>();
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation(cnosDBConstant0, linkedList0, false);
      cnosDBInOperation0.getExpressionType();
      assertFalse(cnosDBInOperation0.isTrue());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CnosDBSelect cnosDBSelect0 = new CnosDBSelect();
      List<CnosDBExpression> list0 = cnosDBSelect0.getGroupByClause();
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation(cnosDBSelect0, list0, false);
      boolean boolean0 = cnosDBInOperation0.isTrue();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CnosDBConstant.TimeStampConstant cnosDBConstant_TimeStampConstant0 = new CnosDBConstant.TimeStampConstant((-249L));
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.STRING;
      CnosDBConstant cnosDBConstant0 = cnosDBConstant_TimeStampConstant0.cast(cnosDBSchema_CnosDBDataType0);
      CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[9];
      List<CnosDBExpression> list0 = Randomly.subset(cnosDBExpressionArray0);
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation(cnosDBConstant0, list0, true);
      cnosDBInOperation0.getListElements();
      assertTrue(cnosDBInOperation0.isTrue());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CnosDBSelect cnosDBSelect0 = new CnosDBSelect();
      List<CnosDBExpression> list0 = cnosDBSelect0.getGroupByClause();
      CnosDBInOperation cnosDBInOperation0 = new CnosDBInOperation(cnosDBSelect0, list0, false);
      cnosDBInOperation0.getExpr();
      assertFalse(cnosDBInOperation0.isTrue());
  }
}
