/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 13 14:14:50 GMT 2025
 */

package sqlancer.cnosdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.ast.CnosDBConstant;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.ast.CnosDBPrefixOperation;
import sqlancer.cnosdb.ast.CnosDBSelect;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBPrefixOperation_ESTest extends CnosDBPrefixOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CnosDBSelect cnosDBSelect0 = new CnosDBSelect();
      CnosDBSelect.CnosDBSubquery cnosDBSelect_CnosDBSubquery0 = new CnosDBSelect.CnosDBSubquery(cnosDBSelect0, "GWu_+snr@ 9zzb");
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.UNARY_PLUS;
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation(cnosDBSelect_CnosDBSubquery0, cnosDBPrefixOperation_PrefixOperator0);
      CnosDBExpression cnosDBExpression0 = cnosDBPrefixOperation0.getExpression();
      assertSame(cnosDBExpression0, cnosDBSelect_CnosDBSubquery0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CnosDBSelect cnosDBSelect0 = new CnosDBSelect();
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation(cnosDBSelect0, (CnosDBPrefixOperation.PrefixOperator) null);
      // Undeclared exception!
      try { 
        cnosDBPrefixOperation0.getTextRepresentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.ast.CnosDBPrefixOperation$PrefixOperator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CnosDBConstant cnosDBConstant0 = CnosDBConstant.createUintConstant(2070L);
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation(cnosDBConstant0, (CnosDBPrefixOperation.PrefixOperator) null);
      // Undeclared exception!
      try { 
        cnosDBPrefixOperation0.getInputDataTypes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.ast.CnosDBPrefixOperation$PrefixOperator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation((CnosDBExpression) null, (CnosDBPrefixOperation.PrefixOperator) null);
      // Undeclared exception!
      try { 
        cnosDBPrefixOperation0.getExpressionType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.ast.CnosDBPrefixOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.NOT;
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = cnosDBPrefixOperation_PrefixOperator0.getExpressionType();
      assertEquals(CnosDBSchema.CnosDBDataType.BOOLEAN, cnosDBSchema_CnosDBDataType0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.NOT;
      String string0 = cnosDBPrefixOperation_PrefixOperator0.getTextRepresentation();
      assertEquals("NOT", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.UNARY_MINUS;
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation((CnosDBExpression) null, cnosDBPrefixOperation_PrefixOperator0);
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = cnosDBPrefixOperation0.getExpressionType();
      assertEquals(CnosDBSchema.CnosDBDataType.INT, cnosDBSchema_CnosDBDataType0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.UNARY_MINUS;
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation((CnosDBExpression) null, cnosDBPrefixOperation_PrefixOperator0);
      String string0 = cnosDBPrefixOperation0.getTextRepresentation();
      assertEquals("-", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.UNARY_MINUS;
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation((CnosDBExpression) null, cnosDBPrefixOperation_PrefixOperator0);
      CnosDBSchema.CnosDBDataType[] cnosDBSchema_CnosDBDataTypeArray0 = cnosDBPrefixOperation0.getInputDataTypes();
      assertEquals(1, cnosDBSchema_CnosDBDataTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.UNARY_MINUS;
      CnosDBPrefixOperation cnosDBPrefixOperation0 = new CnosDBPrefixOperation((CnosDBExpression) null, cnosDBPrefixOperation_PrefixOperator0);
      CnosDBExpression cnosDBExpression0 = cnosDBPrefixOperation0.getExpression();
      assertNull(cnosDBExpression0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CnosDBPrefixOperation.PrefixOperator cnosDBPrefixOperation_PrefixOperator0 = CnosDBPrefixOperation.PrefixOperator.UNARY_PLUS;
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = cnosDBPrefixOperation_PrefixOperator0.getExpressionType();
      assertEquals(CnosDBSchema.CnosDBDataType.INT, cnosDBSchema_CnosDBDataType0);
  }
}
