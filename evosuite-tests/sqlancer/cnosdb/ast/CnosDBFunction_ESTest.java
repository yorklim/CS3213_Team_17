/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 03:56:36 GMT 2025
 */

package sqlancer.cnosdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.ast.CnosDBFunction;
import sqlancer.cnosdb.ast.CnosDBFunctionWithUnknownResult;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBFunction_ESTest extends CnosDBFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.POWER;
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.INT;
      CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[0];
      CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0, cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
      CnosDBExpression[] cnosDBExpressionArray1 = cnosDBFunction0.getArguments();
      assertEquals(0, cnosDBExpressionArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.LEFT;
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.UINT;
      CnosDBFunction cnosDBFunction0 = null;
      try {
        cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0, cnosDBSchema_CnosDBDataType0, (CnosDBExpression[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.ast.CnosDBFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.CONCAT;
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.TIMESTAMP;
      CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[6];
      CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0, cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
      CnosDBExpression[] cnosDBExpressionArray1 = cnosDBFunction0.getArguments();
      assertNotSame(cnosDBExpressionArray0, cnosDBExpressionArray1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.CONCAT;
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.TIMESTAMP;
      CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[6];
      CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0, cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType1 = cnosDBFunction0.getExpressionType();
      assertSame(cnosDBSchema_CnosDBDataType0, cnosDBSchema_CnosDBDataType1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.POWER;
      CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[0];
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.DOUBLE;
      CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0, cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
      String string0 = cnosDBFunction0.getFunctionName();
      assertEquals("power", string0);
  }
}
