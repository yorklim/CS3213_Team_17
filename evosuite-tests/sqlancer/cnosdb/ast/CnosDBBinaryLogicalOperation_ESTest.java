/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 13 14:33:54 GMT 2025
 */

package sqlancer.cnosdb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.ast.CnosDBBinaryLogicalOperation;
import sqlancer.cnosdb.ast.CnosDBExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBBinaryLogicalOperation_ESTest extends CnosDBBinaryLogicalOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CnosDBBinaryLogicalOperation.BinaryLogicalOperator cnosDBBinaryLogicalOperation_BinaryLogicalOperator0 = CnosDBBinaryLogicalOperation.BinaryLogicalOperator.getRandom();
      CnosDBBinaryLogicalOperation cnosDBBinaryLogicalOperation0 = new CnosDBBinaryLogicalOperation((CnosDBExpression) null, (CnosDBExpression) null, cnosDBBinaryLogicalOperation_BinaryLogicalOperator0);
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = cnosDBBinaryLogicalOperation0.getExpressionType();
      assertEquals(CnosDBSchema.CnosDBDataType.BOOLEAN, cnosDBSchema_CnosDBDataType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CnosDBBinaryLogicalOperation.BinaryLogicalOperator cnosDBBinaryLogicalOperation_BinaryLogicalOperator0 = CnosDBBinaryLogicalOperation.BinaryLogicalOperator.AND;
      String string0 = cnosDBBinaryLogicalOperation_BinaryLogicalOperator0.getTextRepresentation();
      assertEquals("AND", string0);
  }
}
