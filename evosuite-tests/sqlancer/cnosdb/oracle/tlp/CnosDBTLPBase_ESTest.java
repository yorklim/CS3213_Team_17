/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 13 14:22:26 GMT 2025
 */

package sqlancer.cnosdb.oracle.tlp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;
import sqlancer.Randomly;
import sqlancer.cnosdb.CnosDBGlobalState;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.ast.CnosDBJoin;
import sqlancer.cnosdb.oracle.tlp.CnosDBTLPBase;
import sqlancer.common.gen.ExpressionGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBTLPBase_ESTest extends CnosDBTLPBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      LinkedList<CnosDBJoin> linkedList0 = new LinkedList<CnosDBJoin>();
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
      LinkedList<CnosDBSchema.CnosDBTable> linkedList1 = new LinkedList<CnosDBSchema.CnosDBTable>();
      // Undeclared exception!
      try { 
        cnosDBTLPBase0.generateSelectBase(linkedList1, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      // Undeclared exception!
      try { 
        CnosDBTLPBase.createSubquery(cnosDBGlobalState0, (String) null, (CnosDBSchema.CnosDBTables) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
      // Undeclared exception!
      try { 
        cnosDBTLPBase0.check();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
      CnosDBSchema.CnosDBTable[] cnosDBSchema_CnosDBTableArray0 = new CnosDBSchema.CnosDBTable[6];
      CnosDBSchema.CnosDBColumn[] cnosDBSchema_CnosDBColumnArray0 = new CnosDBSchema.CnosDBColumn[3];
      Randomly.subset(cnosDBSchema_CnosDBColumnArray0);
      List<CnosDBSchema.CnosDBTable> list0 = Randomly.subset(cnosDBSchema_CnosDBTableArray0);
      CnosDBSchema.CnosDBTables cnosDBSchema_CnosDBTables0 = new CnosDBSchema.CnosDBTables(list0);
      cnosDBTLPBase0.targetTables = cnosDBSchema_CnosDBTables0;
      List<CnosDBExpression> list1 = cnosDBTLPBase0.generateFetchColumns();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Random.setNextRandom(1);
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
      List<CnosDBExpression> list0 = cnosDBTLPBase0.generateFetchColumns();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
      CnosDBSchema.CnosDBTable[] cnosDBSchema_CnosDBTableArray0 = new CnosDBSchema.CnosDBTable[6];
      CnosDBSchema.CnosDBColumn[] cnosDBSchema_CnosDBColumnArray0 = new CnosDBSchema.CnosDBColumn[3];
      Randomly.subset(cnosDBSchema_CnosDBColumnArray0);
      Randomly.subset(cnosDBSchema_CnosDBTableArray0);
      // Undeclared exception!
      try { 
        cnosDBTLPBase0.generateFetchColumns();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.oracle.tlp.CnosDBTLPBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase((CnosDBGlobalState) null);
      try { 
        cnosDBTLPBase0.check();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.oracle.tlp.CnosDBTLPBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
      LinkedList<CnosDBSchema.CnosDBTable> linkedList0 = new LinkedList<CnosDBSchema.CnosDBTable>();
      LinkedList<CnosDBSchema.CnosDBColumn> linkedList1 = new LinkedList<CnosDBSchema.CnosDBColumn>();
      // Undeclared exception!
      try { 
        cnosDBTLPBase0.getJoinStatements(linkedList1, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
      ExpressionGenerator<CnosDBExpression> expressionGenerator0 = cnosDBTLPBase0.getGen();
      assertNull(expressionGenerator0);
  }
}
