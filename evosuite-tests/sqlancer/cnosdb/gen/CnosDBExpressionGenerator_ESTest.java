/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 03:54:16 GMT 2025
 */

package sqlancer.cnosdb.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.Randomly;
import sqlancer.cnosdb.CnosDBGlobalState;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.ast.CnosDBConstant;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.gen.CnosDBExpressionGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CnosDBExpressionGenerator_ESTest extends CnosDBExpressionGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CnosDBExpressionGenerator cnosDBExpressionGenerator0 = null;
      try {
        cnosDBExpressionGenerator0 = new CnosDBExpressionGenerator((CnosDBGlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Randomly randomly0 = new Randomly();
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.TIMESTAMP;
      CnosDBConstant.TimeStampConstant cnosDBConstant_TimeStampConstant0 = (CnosDBConstant.TimeStampConstant)CnosDBExpressionGenerator.generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
      assertFalse(cnosDBConstant_TimeStampConstant0.isInt());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.DOUBLE;
      Randomly randomly0 = new Randomly();
      CnosDBConstant.DoubleConstant cnosDBConstant_DoubleConstant0 = (CnosDBConstant.DoubleConstant)CnosDBExpressionGenerator.generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
      assertFalse(cnosDBConstant_DoubleConstant0.isNull());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Randomly randomly0 = new Randomly();
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.STRING;
      CnosDBExpression cnosDBExpression0 = CnosDBExpressionGenerator.generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
      assertEquals(CnosDBSchema.CnosDBDataType.STRING, cnosDBExpression0.getExpressionType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Randomly randomly0 = new Randomly();
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.BOOLEAN;
      CnosDBConstant.BooleanConstant cnosDBConstant_BooleanConstant0 = (CnosDBConstant.BooleanConstant)CnosDBExpressionGenerator.generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
      assertFalse(cnosDBConstant_BooleanConstant0.isNull());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.INT;
      // Undeclared exception!
      try { 
        CnosDBExpressionGenerator.generateConstant((Randomly) null, cnosDBSchema_CnosDBDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Randomly randomly0 = new Randomly();
      Randomly.getUncachedDouble();
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.INT;
      CnosDBConstant.CnosDBNullConstant cnosDBConstant_CnosDBNullConstant0 = (CnosDBConstant.CnosDBNullConstant)CnosDBExpressionGenerator.generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
      assertFalse(cnosDBConstant_CnosDBNullConstant0.isBoolean());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Randomly randomly0 = new Randomly();
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.UINT;
      CnosDBConstant.IntConstant cnosDBConstant_IntConstant0 = (CnosDBConstant.IntConstant)CnosDBExpressionGenerator.generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
      assertEquals(0L, cnosDBConstant_IntConstant0.asInt());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.STRING;
      // Undeclared exception!
      try { 
        CnosDBExpressionGenerator.generateExpression(cnosDBGlobalState0, cnosDBSchema_CnosDBDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.UINT;
      CnosDBSchema.CnosDBColumn[] cnosDBSchema_CnosDBColumnArray0 = new CnosDBSchema.CnosDBColumn[5];
      List<CnosDBSchema.CnosDBColumn> list0 = Randomly.nonEmptySubset(cnosDBSchema_CnosDBColumnArray0);
      // Undeclared exception!
      try { 
        CnosDBExpressionGenerator.generateExpression(cnosDBGlobalState0, list0, cnosDBSchema_CnosDBDataType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
      // Undeclared exception!
      try { 
        CnosDBExpressionGenerator.generateExpression(cnosDBGlobalState0, (List<CnosDBSchema.CnosDBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
      }
  }
}
