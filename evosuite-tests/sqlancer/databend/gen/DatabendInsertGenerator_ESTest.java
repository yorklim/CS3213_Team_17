/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 08:21:57 GMT 2025
 */

package sqlancer.databend.gen;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.databend.DatabendProvider;
import sqlancer.databend.DatabendSchema;
import sqlancer.databend.gen.DatabendInsertGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DatabendInsertGenerator_ESTest extends DatabendInsertGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      // Undeclared exception!
      try { 
        DatabendInsertGenerator.getQuery(databendProvider_DatabendGlobalState0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      DatabendInsertGenerator databendInsertGenerator0 = new DatabendInsertGenerator(databendProvider_DatabendGlobalState0);
      // Undeclared exception!
      try { 
        databendInsertGenerator0.insertValue((DatabendSchema.DatabendColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.gen.DatabendNewExpressionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabendInsertGenerator.getQuery((DatabendProvider.DatabendGlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.gen.DatabendInsertGenerator", e);
      }
  }
}
