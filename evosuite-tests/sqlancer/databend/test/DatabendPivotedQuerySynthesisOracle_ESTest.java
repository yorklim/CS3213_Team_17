/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 08:50:07 GMT 2025
 */

package sqlancer.databend.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ResultSet;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import sqlancer.common.query.SQLQueryResultCheckAdapter;
import sqlancer.databend.DatabendProvider;
import sqlancer.databend.ast.DatabendConstant;
import sqlancer.databend.ast.DatabendExpression;
import sqlancer.databend.ast.DatabendSelect;
import sqlancer.databend.ast.DatabendUnaryPostfixOperation;
import sqlancer.databend.test.DatabendPivotedQuerySynthesisOracle;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DatabendPivotedQuerySynthesisOracle_ESTest extends DatabendPivotedQuerySynthesisOracle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      DatabendPivotedQuerySynthesisOracle databendPivotedQuerySynthesisOracle0 = new DatabendPivotedQuerySynthesisOracle(databendProvider_DatabendGlobalState0);
      Consumer<ResultSet> consumer0 = (Consumer<ResultSet>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SQLQueryResultCheckAdapter sQLQueryResultCheckAdapter0 = new SQLQueryResultCheckAdapter("E@", consumer0);
      try { 
        databendPivotedQuerySynthesisOracle0.getContainmentCheckQuery(sQLQueryResultCheckAdapter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.test.DatabendPivotedQuerySynthesisOracle", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      DatabendPivotedQuerySynthesisOracle databendPivotedQuerySynthesisOracle0 = new DatabendPivotedQuerySynthesisOracle(databendProvider_DatabendGlobalState0);
      DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
      String string0 = databendPivotedQuerySynthesisOracle0.getExpectedValues(databendConstant_DatabendNullConstant0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DatabendPivotedQuerySynthesisOracle databendPivotedQuerySynthesisOracle0 = new DatabendPivotedQuerySynthesisOracle((DatabendProvider.DatabendGlobalState) null);
      try { 
        databendPivotedQuerySynthesisOracle0.getRectifiedQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.test.DatabendPivotedQuerySynthesisOracle", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      DatabendPivotedQuerySynthesisOracle databendPivotedQuerySynthesisOracle0 = new DatabendPivotedQuerySynthesisOracle(databendProvider_DatabendGlobalState0);
      // Undeclared exception!
      try { 
        databendPivotedQuerySynthesisOracle0.getRectifiedQuery();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      DatabendPivotedQuerySynthesisOracle databendPivotedQuerySynthesisOracle0 = new DatabendPivotedQuerySynthesisOracle(databendProvider_DatabendGlobalState0);
      DatabendSelect databendSelect0 = new DatabendSelect();
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NOT_NULL;
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendSelect0, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
      // Undeclared exception!
      try { 
        databendPivotedQuerySynthesisOracle0.getExpectedValues(databendUnaryPostfixOperation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.common.ast.SelectBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      DatabendPivotedQuerySynthesisOracle databendPivotedQuerySynthesisOracle0 = new DatabendPivotedQuerySynthesisOracle(databendProvider_DatabendGlobalState0);
      // Undeclared exception!
      try { 
        databendPivotedQuerySynthesisOracle0.getExpectedValues((DatabendExpression) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
      DatabendPivotedQuerySynthesisOracle databendPivotedQuerySynthesisOracle0 = new DatabendPivotedQuerySynthesisOracle(databendProvider_DatabendGlobalState0);
      DatabendSelect databendSelect0 = new DatabendSelect();
      // Undeclared exception!
      try { 
        databendPivotedQuerySynthesisOracle0.getExpectedValues(databendSelect0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.DatabendToStringVisitor", e);
      }
  }
}
