/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 08:37:41 GMT 2025
 */

package sqlancer.databend.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.databend.DatabendSchema;
import sqlancer.databend.ast.DatabendCastOperation;
import sqlancer.databend.ast.DatabendColumnValue;
import sqlancer.databend.ast.DatabendConstant;
import sqlancer.databend.ast.DatabendExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DatabendCastOperation_ESTest extends DatabendCastOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType.getRandomWithoutNull();
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation((DatabendExpression) null, databendSchema_DatabendCompositeDataType0);
      DatabendExpression databendExpression0 = databendCastOperation0.getExpression();
      assertNull(databendExpression0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatabendConstant.DatabendFloatConstant databendConstant_DatabendFloatConstant0 = new DatabendConstant.DatabendFloatConstant(773.43471232695);
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.VARCHAR;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 77670);
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("GA=pN?l", databendSchema_DatabendCompositeDataType0, true, true);
      DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0, databendConstant_DatabendFloatConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      DatabendExpression databendExpression0 = databendCastOperation0.getExpression();
      assertEquals(DatabendSchema.DatabendDataType.VARCHAR, databendExpression0.getExpectedType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatabendConstant.DatabendFloatConstant databendConstant_DatabendFloatConstant0 = new DatabendConstant.DatabendFloatConstant(773.43471232695);
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.VARCHAR;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 77670);
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("GA=pN?l", databendSchema_DatabendCompositeDataType0, true, true);
      DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0, databendConstant_DatabendFloatConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      DatabendConstant databendConstant0 = databendCastOperation0.getExpectedValue();
      assertFalse(databendConstant0.isInt());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType.getRandomWithoutNull();
      DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("", databendSchema_DatabendCompositeDataType0, true, false);
      DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0, databendConstant_DatabendNullConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      DatabendConstant databendConstant0 = databendCastOperation0.getExpectedValue();
      assertFalse(databendConstant0.isString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatabendConstant.DatabendFloatConstant databendConstant_DatabendFloatConstant0 = new DatabendConstant.DatabendFloatConstant(773.43471232695);
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.VARCHAR;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 77670);
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("GA=pN?l", databendSchema_DatabendCompositeDataType0, true, true);
      DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0, databendConstant_DatabendFloatConstant0);
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType1 = DatabendSchema.DatabendCompositeDataType.getRandomWithoutNull();
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType1);
      DatabendConstant databendConstant0 = databendCastOperation0.getExpectedValue();
      assertFalse(databendConstant0.isBoolean());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.BOOLEAN;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 0);
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("", databendSchema_DatabendCompositeDataType0, true, false);
      DatabendConstant databendConstant0 = DatabendConstant.createBooleanConstant(false);
      DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0, databendConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      DatabendConstant databendConstant1 = databendCastOperation0.getExpectedValue();
      assertFalse(databendConstant1.isString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.FLOAT;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 1538337030);
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("", databendSchema_DatabendCompositeDataType0, false, true);
      DatabendConstant databendConstant0 = DatabendConstant.createStringConstant("");
      DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0, databendConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      DatabendConstant databendConstant1 = databendCastOperation0.getExpectedValue();
      assertEquals((-1.0), databendConstant1.asFloat(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType((DatabendSchema.DatabendDataType) null, (-1786));
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("INT2", databendSchema_DatabendCompositeDataType0, false, false);
      DatabendConstant.DatabendTimestampConstant databendConstant_DatabendTimestampConstant0 = new DatabendConstant.DatabendTimestampConstant((-1L));
      DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0, databendConstant_DatabendTimestampConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      databendCastOperation0.getExpectedType();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType.getRandomWithoutNull();
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation((DatabendExpression) null, databendSchema_DatabendCompositeDataType0);
      // Undeclared exception!
      try { 
        databendCastOperation0.getExpectedValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.ast.DatabendCastOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.BOOLEAN;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 1538337030);
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("", databendSchema_DatabendCompositeDataType0, false, true);
      DatabendConstant databendConstant0 = DatabendConstant.createStringConstant("");
      DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0, databendConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      // Undeclared exception!
      try { 
        databendCastOperation0.getExpectedValue();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // string: , cannot be forced to boolean
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
      DatabendCastOperation databendCastOperation0 = null;
      try {
        databendCastOperation0 = new DatabendCastOperation(databendConstant_DatabendNullConstant0, (DatabendSchema.DatabendCompositeDataType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.ast.DatabendCastOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatabendConstant.DatabendFloatConstant databendConstant_DatabendFloatConstant0 = new DatabendConstant.DatabendFloatConstant(773.43471232695);
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.VARCHAR;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 77670);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendConstant_DatabendFloatConstant0, databendSchema_DatabendCompositeDataType0);
      DatabendConstant databendConstant0 = databendCastOperation0.getExpectedValue();
      assertNull(databendConstant0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.BOOLEAN;
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(databendSchema_DatabendDataType0, 1538337030);
      DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("", databendSchema_DatabendCompositeDataType0, false, true);
      DatabendConstant databendConstant0 = DatabendConstant.createStringConstant("");
      DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0, databendConstant0);
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0, databendSchema_DatabendCompositeDataType0);
      String string0 = databendCastOperation0.getOperatorRepresentation();
      assertEquals("::BOOLEAN", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType.getRandomWithoutNull();
      DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
      DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendConstant_DatabendNullConstant0, databendSchema_DatabendCompositeDataType0);
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = databendCastOperation0.getExpectedType();
      assertEquals(DatabendSchema.DatabendDataType.INT, databendSchema_DatabendDataType0);
  }
}
