/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 08:46:10 GMT 2025
 */

package sqlancer.databend.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.databend.DatabendSchema;
import sqlancer.databend.ast.DatabendAggregateOperation;
import sqlancer.databend.ast.DatabendExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DatabendAggregateOperation_ESTest extends DatabendAggregateOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DatabendAggregateOperation.DatabendAggregateFunction databendAggregateOperation_DatabendAggregateFunction0 = DatabendAggregateOperation.DatabendAggregateFunction.AVG;
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = databendAggregateOperation_DatabendAggregateFunction0.getRandomType();
      assertEquals(DatabendSchema.DatabendDataType.INT, databendSchema_DatabendDataType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DatabendAggregateOperation.DatabendAggregateFunction databendAggregateOperation_DatabendAggregateFunction0 = DatabendAggregateOperation.DatabendAggregateFunction.AVG;
      DatabendAggregateOperation databendAggregateOperation0 = new DatabendAggregateOperation((List<DatabendExpression>) null, databendAggregateOperation_DatabendAggregateFunction0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DatabendAggregateOperation.DatabendAggregateFunction databendAggregateOperation_DatabendAggregateFunction0 = DatabendAggregateOperation.DatabendAggregateFunction.AVG;
      int int0 = databendAggregateOperation_DatabendAggregateFunction0.getNrArgs();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DatabendAggregateOperation.DatabendAggregateFunction databendAggregateOperation_DatabendAggregateFunction0 = DatabendAggregateOperation.DatabendAggregateFunction.getRandom();
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = databendAggregateOperation_DatabendAggregateFunction0.getRandomType();
      assertEquals(DatabendSchema.DatabendDataType.INT, databendSchema_DatabendDataType0);
  }
}
