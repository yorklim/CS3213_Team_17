/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 14 07:53:08 GMT 2025
 */

package sqlancer.databend.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.databend.DatabendSchema;
import sqlancer.databend.ast.DatabendColumnValue;
import sqlancer.databend.ast.DatabendConstant;
import sqlancer.databend.ast.DatabendExpression;
import sqlancer.databend.ast.DatabendUnaryPostfixOperation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DatabendUnaryPostfixOperation_ESTest extends DatabendUnaryPostfixOperation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatabendConstant databendConstant0 = DatabendConstant.createNullConstant();
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NULL;
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendConstant0, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
      String string0 = databendUnaryPostfixOperation0.getOperatorRepresentation();
      assertEquals("IS NULL", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatabendConstant databendConstant0 = DatabendConstant.createNullConstant();
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NOT_NULL;
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendConstant0, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator1 = databendUnaryPostfixOperation0.getOp();
      assertSame(databendUnaryPostfixOperation_DatabendUnaryPostfixOperator1, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NULL;
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation((DatabendExpression) null, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
      DatabendExpression databendExpression0 = databendUnaryPostfixOperation0.getExpression();
      assertNull(databendExpression0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NOT_NULL;
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation((DatabendExpression) null, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
      // Undeclared exception!
      try { 
        databendUnaryPostfixOperation0.getExpectedValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.ast.DatabendUnaryPostfixOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatabendConstant.DatabendTimestampConstant databendConstant_DatabendTimestampConstant0 = new DatabendConstant.DatabendTimestampConstant(253380000000000L);
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NULL;
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendConstant_DatabendTimestampConstant0, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
      DatabendConstant.DatabendTimestampConstant databendConstant_DatabendTimestampConstant1 = (DatabendConstant.DatabendTimestampConstant)databendUnaryPostfixOperation0.getExpression();
      assertFalse(databendConstant_DatabendTimestampConstant1.isBoolean());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NOT_NULL;
      DatabendConstant.DatabendBooleanConstant databendConstant_DatabendBooleanConstant0 = (DatabendConstant.DatabendBooleanConstant)databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0.apply(databendConstant_DatabendNullConstant0);
      assertFalse(databendConstant_DatabendBooleanConstant0.getValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NOT_NULL;
      DatabendConstant.DatabendDateConstant databendConstant_DatabendDateConstant0 = new DatabendConstant.DatabendDateConstant(253380000000000L);
      DatabendConstant databendConstant0 = databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0.apply(databendConstant_DatabendDateConstant0);
      assertTrue(databendConstant0.asBoolean());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NULL;
      String string0 = databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0.getTextRepresentation();
      assertEquals("IS NULL", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.getRandom();
      DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
      DatabendColumnValue databendColumnValue0 = new DatabendColumnValue((DatabendSchema.DatabendColumn) null, databendConstant_DatabendNullConstant0);
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendColumnValue0, databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0);
      DatabendConstant databendConstant0 = databendUnaryPostfixOperation0.getExpectedValue();
      assertFalse(databendConstant0.isString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.getRandom();
      DatabendSchema.DatabendDataType[] databendSchema_DatabendDataTypeArray0 = databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0.getInputDataTypes();
      assertEquals(7, databendSchema_DatabendDataTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DatabendConstant.DatabendIntConstant databendConstant_DatabendIntConstant0 = new DatabendConstant.DatabendIntConstant((-730L));
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendConstant_DatabendIntConstant0, (DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator) null);
      DatabendConstant databendConstant0 = databendUnaryPostfixOperation0.getExpectedValue();
      assertNull(databendConstant0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatabendConstant.DatabendIntConstant databendConstant_DatabendIntConstant0 = new DatabendConstant.DatabendIntConstant((-730L));
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendConstant_DatabendIntConstant0, (DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator) null);
      // Undeclared exception!
      try { 
        databendUnaryPostfixOperation0.getOperatorRepresentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.databend.ast.DatabendUnaryPostfixOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatabendConstant.DatabendIntConstant databendConstant_DatabendIntConstant0 = new DatabendConstant.DatabendIntConstant((-730L));
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendConstant_DatabendIntConstant0, (DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator) null);
      DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = databendUnaryPostfixOperation0.getExpectedType();
      assertEquals(DatabendSchema.DatabendDataType.BOOLEAN, databendSchema_DatabendDataType0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DatabendConstant.DatabendIntConstant databendConstant_DatabendIntConstant0 = new DatabendConstant.DatabendIntConstant((-730L));
      DatabendUnaryPostfixOperation databendUnaryPostfixOperation0 = new DatabendUnaryPostfixOperation(databendConstant_DatabendIntConstant0, (DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator) null);
      databendUnaryPostfixOperation0.getOp();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0 = DatabendUnaryPostfixOperation.DatabendUnaryPostfixOperator.IS_NOT_NULL;
      DatabendSchema.DatabendDataType[] databendSchema_DatabendDataTypeArray0 = databendUnaryPostfixOperation_DatabendUnaryPostfixOperator0.getInputDataTypes();
      assertEquals(7, databendSchema_DatabendDataTypeArray0.length);
  }
}
